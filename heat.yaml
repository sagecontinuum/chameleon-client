

#  With a heat template you have to specify a start date/time. Chameleon support creation of immediate instance if you omit start time, 
#   but this won't work with such a heat template



# example:
# openstack stack create test --parameter key_name=<your key> --parameter lease_name=test --parameter lease_start_date="$(date -u +"%Y-%m-%d %H:%M")" --parameter lease_end_date="$(date -u +"%Y-%m-%d %H:%M" -d "$(date)+7 days")" --template heat.yaml

# openstack stack show <stack_name | stack_id>

# get IP address
# openstack stack show test -f json | jq '.outputs[] | select(.output_key=="server_ip" )' | jq -r ."output_value" 



# This describes what is deployed by this template.
description: Basic demonstration of using OS::Blazar::Lease resource
# This defines the minimum Heat version required by this template.
heat_template_version: 2016-04-08
# The resources section defines what OpenStack resources are to be deployed and
# how they should be configured.
resources:
  # Define a login server that has a public (floating) IP attached
  lease:
    type: OS::Blazar::Lease
    properties:
      end_date: { get_param: lease_end_date }
      start_date: { get_param: lease_start_date }
      name: { get_param: lease_name }
      reservations:
        - resource_type: "physical:host"
          min: 1
          max: 1
          resource_properties: '["=", "$node_type", "compute_haswell"]'
  server:
    type: OS::Nova::Server
    properties:
      flavor: baremetal
      image: CC-Ubuntu18.04
      key_name: { get_param: key_name }
      networks:
         - network: sharednet1
      scheduler_hints: { reservation: { get_attr: [lease, reservations, 0, id] } }
      tags:
        - { get_resource: lease }
    depends_on: lease
  floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public
  server_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: {get_resource: floating_ip}
      port_id: {get_attr: [server, addresses, sharednet1, 0, port]}
# The parameters section gathers configuration from the user.
parameters:
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: default
    constraints:
    - custom_constraint: nova.keypair
  lease_name:
    type: string
    description: The name of the lease.
    default: my_lease
  lease_start_date:
    type: string
    description: The start date and time of the lease. The date and time format is "CCYY-MM-DD hh:mm".
  lease_end_date:
    type: string
    description: The end date and time of the lease. The date and time format is "CCYY-MM-DD hh:mm".
# Output some useful information about what was created
outputs:
  reservation_id:
    description: reservation id.
    value: { get_attr: [lease, reservations] }
  server_ip:
    description: Public IP address of the server
    value: { get_attr: [floating_ip, ip] }
   
